@page "/"
@inject HttpClient http
@inject IToastService toastService
@using Client.ViewModels

<p>
    Slide the misplaced piece back to its original position which is shaded and then click "Submit" to verify. Complete the puzzle quick before it expires.
</p>

<div>
    <div style="margin: 0 auto; padding-left: @(x)px; padding-top: @(y)px; width: 696px; height: 442px; background-image: url('data:image/png;base64, @backgroundImage');">
        <div style="width: 88px; height: 80px; background-image: url('data:image/png;base64, @missingPieceImage');">
            
        </div>
    </div>

    <div style="margin: 0 auto; width: 696px; text-align: center;">
        <input type="range" min="0" max="608" style="width: 100%;" @bind="@x" @bind:event="oninput" />
        <button type="button" @onclick="@Submit">Submit</button>

    </div>

</div>



<SurveyPrompt Title="Feel free to share your feedback on this project!" />

@code{
    private string id = "";
    private string backgroundImage = "";
    private string missingPieceImage = "";
    private int x;
    private int y;

	protected override async Task OnInitializedAsync()
    {
        var jigsawPuzzle = await http.GetFromJsonAsync<JigsawPuzzle>("api/jigsaw-puzzle");
        id = jigsawPuzzle.Id;
        backgroundImage = jigsawPuzzle.BackgroundImage;
        missingPieceImage = jigsawPuzzle.MissingPieceImage;
        y = jigsawPuzzle.Y;
    }

    private async Task Submit()
    {
        var submission = new PuzzleSubmissionViewModel
        {
            Id = id,
            X = x
        };
        var response = await http.PostAsJsonAsync("api/jigsaw-puzzle", submission);

        var responseMessage = await response.Content.ReadFromJsonAsync<Response>();

        if (responseMessage.IsSuccessful)
        {
            toastService.ShowSuccess(responseMessage.Message);
        }
        else
        {
            toastService.ShowError(responseMessage.Message);
        }
        
    }
}